generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model DoctorAssignation {
  PatientID   String   @db.VarChar(50)
  DoctorID    String   @db.VarChar(50)
  UserName    String   @db.VarChar(50)
  PatientType String   @db.VarChar(50)
  Cost        Float    @db.Money
  Date        DateTime @db.Date
  Booked      Boolean?
  AddedBy     String   @db.VarChar(50)
  DateAdded   DateTime @db.DateTime
  Tel         String?  @db.VarChar(50)
  Status      String?  @db.VarChar(50)
  BookingTel  String?  @db.VarChar(50)
  ID          Int      @id(map: "PK_DOCTORASSIGNATION_ID") @unique(map: "AK_DOCTORASSIGNATION") @default(autoincrement())

  @@index([ID], map: "ID")
}

model Doctors {
  DoctorID         String    @id(map: "PK_DOCTORS") @db.VarChar(50)
  Name             String?   @db.VarChar(500)
  Gender           String    @db.Char(10)
  BirthDate        DateTime? @db.Date
  Address          String?   @db.VarChar(100)
  Tel              String    @db.VarChar(50)
  Specialization   String    @db.VarChar(50)
  Category         String    @db.VarChar(50)
  Department       String?   @db.VarChar(50)
  RoomNo           String?   @db.VarChar(50)
  Cost             Float     @db.Money
  Active           String    @db.Char(3)
  UserName         String    @db.VarChar(50)
  City             String    @db.VarChar(50)
  DateAdded        DateTime  @db.DateTime
  AddedBy          String    @db.VarChar(50)
  DateModified     DateTime? @db.DateTime
  ModifiedBy       String?   @db.VarChar(50)
  LevelofEducation String?   @db.Text
  DoctorNo         Int?
  OnlineDoctorNo   Int?
  Limitation       Int?
  Doctor           String?   @db.Char(3)
  WorkingDays      String?   @db.VarChar(100)
  ID               Int       @unique(map: "PK_ID") @default(autoincrement())
}

model Groups {
  GroupID     Int     @default(autoincrement())
  GroupName   String  @id(map: "PK_Groups") @db.VarChar(50)
  Menu        String? @db.Text
  Pages       String? @db.Text
  Restriction String? @db.Text
  Users       Users[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model HospitalInfo {
  HospitalID Int     @default(autoincrement())
  Title      String  @db.VarChar(100)
  Logo       Bytes?  @db.Image
  City       String  @db.VarChar(50)
  Address    String? @db.VarChar(100)
  Tel        String? @db.VarChar(50)
  Fax        String? @db.VarChar(50)
  Website    String? @db.VarChar(50)
  Note       String? @db.VarChar(50)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model InternetConnection {
  InternetDate DateTime @db.DateTime

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model Menu {
  MenuID   Int
  ParentID Int
  Menu     String   @db.VarChar(50)
  UrlLink  String   @db.VarChar(50)
  Active   Boolean?

  @@ignore
}

model Patients {
  PatientID     String    @unique(map: "PK_PatientID") @db.VarChar(50)
  Name          String    @db.VarChar(50)
  Gender        String    @db.Char(10)
  Age           Int?
  Town          String    @db.VarChar(50)
  Address       String?   @db.VarChar(100)
  Tel           String    @db.VarChar(50)
  MaritalStatus String    @db.Char(10)
  Occupation    String?   @db.VarChar(50)
  City          String    @db.VarChar(50)
  Date          DateTime  @db.Date
  Status        Int?
  StatusDate    DateTime? @db.Date
  Admitted      Int?
  DateAdded     DateTime  @db.DateTime
  AddedBy       String    @db.VarChar(50)
  DateModified  DateTime? @db.DateTime
  ModifiedBy    String?   @db.VarChar(50)
  DateUnit      String?   @db.VarChar(50)
  SerialNo      Int       @default(autoincrement())
  DOB           DateTime? @db.Date
  TempID        String?   @db.VarChar(50)
}

model sysdiagrams {
  name         String @db.NVarChar(128)
  principal_id Int
  diagram_id   Int    @id(map: "PK__sysdiagr__C2B05B611A14E395") @default(autoincrement())
  version      Int?
  definition   Bytes?

  @@unique([principal_id, name], map: "UK_principal_name")
}

model Town {
  TownID       Int       @default(autoincrement())
  Town         String    @id(map: "PK_Town") @db.VarChar(50)
  Discard      String?   @db.Char(3)
  DateAdded    DateTime? @db.DateTime
  AddedBy      String?   @db.VarChar(50)
  DateModified DateTime? @db.DateTime
  ModifiedBy   String?   @db.VarChar(50)
}

model Users {
  UserID       Int       @default(autoincrement())
  Name         String    @db.VarChar(50)
  UserName     String    @id(map: "PK_Users") @db.VarChar(50)
  UserPassword String    @db.VarChar(50)
  GroupName    String    @db.VarChar(50)
  City         String    @db.VarChar(50)
  Active       String    @db.Char(3)
  DateCreated  DateTime  @db.DateTime
  ValidDate    DateTime? @db.Date
  UserCode     String?   @db.VarChar(50)
  Groups       Groups    @relation(fields: [GroupName], references: [GroupName], onUpdate: NoAction, map: "FK_Users_Groups")
  Users        Users     @relation("UsersToUsers_UserName", fields: [UserName], references: [UserName], onUpdate: NoAction, map: "FK_Users_Users")
  other_Users  Users?    @relation("UsersToUsers_UserName")
}
